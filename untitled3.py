# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BSLaIg-E8XP29NfHOw2ulHd57el7MukV
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


# Read the Excel file
df = pd.read_excel("/content/raw_tweets_queens_death.xlsx")

# 1. Find the user with the most retweets
user_with_most_retweets = df["username"].loc[df["retweets_count"].idxmax()]
print("User with the most retweets:", user_with_most_retweets)

# 2. Find the most effective tweet (using a custom measure)
# Define a custom measure combining retweets and time from death
df["effectiveness"] = df["retweets_count"] / (df["date"] - df["date"].min()).dt.days
most_effective_tweet = df.iloc[df["effectiveness"].idxmax()]
print("Most effective tweet:\n", most_effective_tweet)

# 3. Show language and place distribution
df["language"].value_counts().plot(kind="bar")
plt.title("Language Distribution")
plt.show()

df["place"].value_counts().plot(kind="bar")
plt.title("Place Distribution")
plt.show()

# 4. Visualize relationships between likes, retweets, and replies
plt.scatter(df["likes_count"], df["retweets_count"])
plt.title("Likes vs Retweets")
plt.show()

plt.scatter(df["likes_count"], df["replies_count"])
plt.title("Likes vs Replies")
plt.show()

# 5. Analyze impact of videos on likes
tweets_with_video = df[df["video"] == True]
tweets_without_video = df[df["video"] == False]

mean_likes_with_video = tweets_with_video["likes_count"].mean()
mean_likes_without_video = tweets_without_video["likes_count"].mean()

print("Mean likes with video:", mean_likes_with_video)
print("Mean likes without video:", mean_likes_without_video)